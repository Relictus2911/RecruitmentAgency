@using RecruitmentAgency.Enum
@model RecruitmentAgency.Models.ViewModels.RegisterViewModel

@{
	ViewBag.Title = "Регистрация";
}


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

<div class="form-horizontal">
	<h4>Регистрация</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<div class="form-group">
		@Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.PasswordConfirm, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.PasswordConfirm, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.PasswordConfirm, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EnumDropDownListFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Зарегистрироваться" class="btn btn-default" />
		</div>
	</div>
</div>
}


@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
